The ``2-matrix_divided.py`` module
======================

Using ``matrix_divided`` function
------------------------------

Import ``matrix_divided`` from the ``2-matrix_divided.py`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    
    ------------------
    Test success cases
    ------------------
    
    Empty list in matrix
    --------------------
    >>> matrix_divided([[]], 2)
    [[]]

    List of even numbers divided by 2
    ---------------------------------
    >>> matrix_divided([[10, 20, 30], [40, 50, 60]], 2)
    [[5.0, 10.0, 15.0], [20.0, 25.0, 30.0]]

    Test rounded to 2 decimal places
    --------------------------------
    >>> matrix_divided([[11, 21, 31], [41, 51, 61]], 7)
    [[1.57, 3.0, 4.43], [5.86, 7.29, 8.71]]

    Divided by a negative number
    ----------------------------
    >>> matrix_divided([[65, 54, 43], [32, 21, 10]], -1)
    [[-65.0, -54.0, -43.0], [-32.0, -21.0, -10.0]]

    Divided by a negative number and contain a negative as element in a list
    ------------------------------------------------------------------------
    >>> matrix_divided([[65, 54, 43], [32, 21, -10]], -1)
    [[-65.0, -54.0, -43.0], [-32.0, -21.0, 10.0]]

    Test pycodestyle
    ----------------
    >>> import pycodestyle
    >>> fchecker = pycodestyle.Checker('2-matrix_divided.py', show_source=True)
    >>> file_errors = fchecker.check_all()
    >>> 

    ------------
    Test errors:
    ------------

    Test if matrix is a list of lists of integers or floats
    ---------------------------------------------------------
    >>> matrix_divided(["Hello", [40, 51, 62]], 7)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[10, 21, 32], [43, 'x', 65]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[65, 54, 43], None], None)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided(None, None)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    Test if each row of the matrix is of the same size
    --------------------------------------------------
    >>> matrix_divided([[10, 21, 32], [43, 54]], 5)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size
        
    One empty list and list with content
    ------------------------------------
    >>> matrix_divided([[], [10, 20, 30]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    Test if div is a number (integer or float)
    ------------------------------------------
    >>> matrix_divided([[15, 24, 33], [42, 51, 60]], [])
    Traceback (most recent call last):
    TypeError: div must be a number
    
    >>> matrix_divided([[15, 24, 33], [42, 51, 60]], "world")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[65, 54, 43], [32, 21, 10]], None)
    Traceback (most recent call last):
    TypeError: div must be a number

    Test if div is equal to 0
    -------------------------
    >>> matrix_divided([[65, 54, 43], [32, 21, 10]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
